{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { reactive, ref } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { addGoods, uploadImage } from '@/api/goods';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'AddGoods',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n\n    /* 表单数据 */\n    const form = reactive({\n      name: '',\n      service: '',\n      category: '',\n      price: 0,\n      stock: 0,\n      description: '',\n      details: [{\n        key: '',\n        value: ''\n      }],\n      images: []\n    });\n\n    /* 本地预览列表 */\n    const fileList = ref([]);\n\n    /* 添加 / 删除详情 */\n    const addDetail = () => {\n      if (form.details.length < 10) form.details.push({\n        key: '',\n        value: ''\n      });\n    };\n    const removeDetail = idx => form.details.splice(idx, 1);\n\n    /* 选图变化时同步 fileList，用于本地预览 */\n    const handleChange = (_, list) => {\n      fileList.value = list;\n    };\n\n    /* 删除 */\n    const handleRemove = (_, list) => {\n      fileList.value = list;\n    };\n\n    /* 文件格式/大小校验 */\n    const beforeUpload = file => {\n      const isImg = file.type.startsWith('image/');\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImg) ElMessage.error('只能上传图片');\n      if (!isLt2M) ElMessage.error('图片不能大于 2MB');\n      return isImg && isLt2M;\n    };\n\n    /* 提交：先批量上传图片，再提交整体数据 */\n    const submitForm = async () => {\n      if (!form.name || !form.service || !form.category) {\n        return ElMessage.error('请填写必填项');\n      }\n      const validDetails = form.details.filter(d => d.key.trim() && d.value.trim());\n      if (form.details.length && !validDetails.length) {\n        return ElMessage.error('请至少填写一条有效商品详情');\n      }\n      const merchantId = Number(localStorage.getItem('uid')); // ✅ 取出商家ID\n      if (!merchantId) {\n        ElMessage.error('未登录，请先登录');\n        return router.push('/');\n      }\n      try {\n        // 1. 上传所有图片\n        const uploadTasks = fileList.value.map(f => uploadImage(f.raw).then(res => res.data.url));\n        const imageUrls = await Promise.all(uploadTasks);\n\n        // 2. 提交完整数据\n        const payload = {\n          ...form,\n          merchantId,\n          images: imageUrls,\n          details: validDetails\n        };\n        await addGoods(payload);\n        ElMessage.success('商品上架成功');\n        router.push('/goods');\n      } catch (e) {\n        ElMessage.error('上架失败');\n      }\n    };\n    const __returned__ = {\n      router,\n      form,\n      fileList,\n      addDetail,\n      removeDetail,\n      handleChange,\n      handleRemove,\n      beforeUpload,\n      submitForm,\n      reactive,\n      ref,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get addGoods() {\n        return addGoods;\n      },\n      get uploadImage() {\n        return uploadImage;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","ElMessage","addGoods","uploadImage","useRouter","router","form","name","service","category","price","stock","description","details","key","value","images","fileList","addDetail","length","push","removeDetail","idx","splice","handleChange","_","list","handleRemove","beforeUpload","file","isImg","type","startsWith","isLt2M","size","error","submitForm","validDetails","filter","d","trim","merchantId","Number","localStorage","getItem","uploadTasks","map","f","raw","then","res","data","url","imageUrls","Promise","all","payload","success","e"],"sources":["D:/Desktop/ecomplat/src/views/AddGoods.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-goods\">\r\n    <h2>上架商品</h2>\r\n\r\n    <el-form :model=\"form\" label-width=\"120px\" style=\"max-width: 680px\">\r\n      <!-- 商品名称 -->\r\n      <el-form-item label=\"商品名称\" required>\r\n        <el-input v-model=\"form.name\" placeholder=\"请输入商品名称\" />\r\n      </el-form-item>\r\n\r\n      <!-- 提供服务 -->\r\n      <el-form-item label=\"提供服务\" required>\r\n        <el-input v-model=\"form.service\" placeholder=\"例如：上门维修、代排队等\" />\r\n      </el-form-item>\r\n\r\n      <!-- 分类 -->\r\n      <el-form-item label=\"商品分类\" required>\r\n        <el-select v-model=\"form.category\" placeholder=\"请选择分类\">\r\n          <el-option label=\"服饰鞋包\" value=\"clothes\" />\r\n          <el-option label=\"跑腿\" value=\"errand\" />\r\n          <el-option label=\"家政\" value=\"housekeeping\" />\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <!-- 单价 -->\r\n      <el-form-item label=\"单价（元）\" required>\r\n        <el-input-number v-model=\"form.price\" :min=\"0\" :precision=\"2\" />\r\n      </el-form-item>\r\n\r\n      <!-- 库存 -->\r\n      <el-form-item label=\"库存\" required>\r\n        <el-input-number v-model=\"form.stock\" :min=\"0\" />\r\n      </el-form-item>\r\n\r\n      <!-- 商品描述 -->\r\n      <el-form-item label=\"商品描述\">\r\n        <el-input\r\n          type=\"textarea\"\r\n          :rows=\"3\"\r\n          v-model=\"form.description\"\r\n          placeholder=\"简要描述商品亮点\"\r\n        />\r\n      </el-form-item>\r\n\r\n      <!-- 商品详情 key-value -->\r\n      <el-form-item label=\"商品详情\" required>\r\n        <div\r\n          v-for=\"(item, idx) in form.details\"\r\n          :key=\"idx\"\r\n          style=\"display:flex;gap:8px;margin-bottom:8px\"\r\n        >\r\n          <el-input v-model=\"item.key\" placeholder=\"属性名\" style=\"width:140px\" />\r\n          <el-input v-model=\"item.value\" placeholder=\"属性值\" style=\"flex:1\" />\r\n          <el-button\r\n            v-if=\"form.details.length > 1\"\r\n            type=\"danger\"\r\n            size=\"small\"\r\n            @click=\"removeDetail(idx)\"\r\n            >删</el-button\r\n          >\r\n        </div>\r\n        <el-button\r\n          v-if=\"form.details.length < 10\"\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          @click=\"addDetail\"\r\n          >+ 添加属性</el-button\r\n        >\r\n      </el-form-item>\r\n\r\n      <!-- 商品图片 -->\r\n      <el-form-item label=\"商品图片\">\r\n        <el-upload\r\n          ref=\"uploadRef\"\r\n          list-type=\"picture\"\r\n          :limit=\"5\"\r\n          :file-list=\"fileList\"\r\n          :before-upload=\"beforeUpload\"\r\n          :on-change=\"handleChange\"\r\n          :on-remove=\"handleRemove\"\r\n          :auto-upload=\"false\"\r\n          multiple\r\n        >\r\n          <el-button type=\"primary\">选择图片（最多 5 张）</el-button>\r\n        </el-upload>\r\n      </el-form-item>\r\n\r\n      <!-- 提交 -->\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm\">上架商品</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { addGoods, uploadImage } from '@/api/goods'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst router = useRouter()\r\n\r\n/* 表单数据 */\r\nconst form = reactive({\r\n  name: '',\r\n  service: '',\r\n  category: '',\r\n  price: 0,\r\n  stock: 0,\r\n  description: '',\r\n  details: [{ key: '', value: '' }],\r\n  images: []\r\n})\r\n\r\n/* 本地预览列表 */\r\nconst fileList = ref([])\r\n\r\n/* 添加 / 删除详情 */\r\nconst addDetail = () => {\r\n  if (form.details.length < 10) form.details.push({ key: '', value: '' })\r\n}\r\nconst removeDetail = idx => form.details.splice(idx, 1)\r\n\r\n/* 选图变化时同步 fileList，用于本地预览 */\r\nconst handleChange = (_, list) => {\r\n  fileList.value = list\r\n}\r\n\r\n/* 删除 */\r\nconst handleRemove = (_, list) => {\r\n  fileList.value = list\r\n}\r\n\r\n/* 文件格式/大小校验 */\r\nconst beforeUpload = (file) => {\r\n  const isImg = file.type.startsWith('image/')\r\n  const isLt2M = file.size / 1024 / 1024 < 2\r\n  if (!isImg) ElMessage.error('只能上传图片')\r\n  if (!isLt2M) ElMessage.error('图片不能大于 2MB')\r\n  return isImg && isLt2M\r\n}\r\n\r\n/* 提交：先批量上传图片，再提交整体数据 */\r\nconst submitForm = async () => {\r\n  if (!form.name || !form.service || !form.category) {\r\n    return ElMessage.error('请填写必填项')\r\n  }\r\n  \r\n  const validDetails = form.details.filter(\r\n    d => d.key.trim() && d.value.trim()\r\n  )\r\n  if (form.details.length && !validDetails.length) {\r\n    return ElMessage.error('请至少填写一条有效商品详情')\r\n  }\r\n  \r\n  const merchantId = Number(localStorage.getItem('uid')) // ✅ 取出商家ID\r\n  if (!merchantId) {\r\n    ElMessage.error('未登录，请先登录')\r\n    return router.push('/')\r\n  }\r\n\r\n  try {\r\n    // 1. 上传所有图片\r\n    const uploadTasks = fileList.value.map(f =>\r\n      uploadImage(f.raw).then(res => res.data.url)\r\n    )\r\n    const imageUrls = await Promise.all(uploadTasks)\r\n\r\n    // 2. 提交完整数据\r\n    const payload = {\r\n      ...form,\r\n      merchantId,\r\n      images: imageUrls,\r\n      details: validDetails\r\n    }\r\n    await addGoods(payload)\r\n    ElMessage.success('商品上架成功')\r\n    router.push('/goods')\r\n  } catch (e) {\r\n    ElMessage.error('上架失败')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.add-goods {\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}