{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport JSONbig from 'json-bigint';\nexport default {\n  name: 'CartPage',\n  data() {\n    return {\n      cartItems: [],\n      // 购物车数据\n      deliveryAddress: '辽宁省大连市榆林区大连理工大学',\n      // 配送地址\n      isAllChecked: false // 全选标识\n    };\n  },\n  computed: {\n    // 购物车商品数量（可用于导航栏徽标，若需要可暴露给父组件）\n    cartCount() {\n      return this.cartItems.reduce((total, item) => total + item.quantity, 0);\n    },\n    // 计算总价（已选商品）\n    totalPrice() {\n      return this.cartItems.reduce((total, item) => {\n        if (item.checked) {\n          return total + item.price * item.quantity;\n        }\n        return total;\n      }, 0);\n    }\n  },\n  methods: {\n    // 返回首页\n    goBackHome() {\n      this.$router.push('/'); // 跳转到首页路由，根据实际路由调整\n    },\n    // 减少数量\n    decreaseQty(index) {\n      if (this.cartItems[index].quantity > 1) {\n        this.cartItems[index].quantity--;\n      }\n    },\n    // 增加数量\n    increaseQty(index) {\n      this.cartItems[index].quantity++;\n    },\n    // 数量改变时（可做合法性校验、同步接口等）\n    handleQtyChange(index) {\n      const qty = this.cartItems[index].quantity;\n      if (qty < 1) {\n        this.cartItems[index].quantity = 1;\n      }\n      // 这里可调用接口同步购物车数量：\n      // this.updateCartItemQty(this.cartItems[index].id, qty)\n    },\n    // 单个商品选中\n    handleCheckAll() {\n      this.isAllChecked = this.cartItems.every(item => item.checked);\n    },\n    // 全选/全不选\n    checkAll() {\n      this.cartItems.forEach(item => {\n        item.checked = this.isAllChecked;\n      });\n    },\n    // 删除选中商品\n    deleteSelected() {\n      this.cartItems = this.cartItems.filter(item => !item.checked);\n      // 同时调用接口删除购物车数据：\n      // const ids = this.cartItems.filter(item => item.checked).map(item => item.id)\n      // this.deleteCartItems(ids)\n    },\n    // 结算（可跳转到结算页，或调用提交订单接口）\n    handleCheckout() {\n      const selectedItems = this.cartItems.filter(item => item.checked);\n      if (selectedItems.length === 0) {\n        this.$message.warning('请选择要结算的商品~');\n        return;\n      }\n      // 这里可跳转结算页，传递选中商品信息：\n      this.$router.push({\n        path: '/checkout',\n        query: {\n          items: JSON.stringify(selectedItems)\n        }\n      });\n      // 或直接调用提交订单接口：\n      // this.submitOrder(selectedItems)\n    },\n    // 模拟从接口拉取购物车数据（实际项目替换为真实接口）\n    async loadCartItems() {\n      try {\n        const res = await fetch('http://localhost:8081/api/cart');\n        const text = await res.text();\n        const list = JSONbig.parse(text);\n        this.cartItems = list.map(item => ({\n          ...item,\n          id: String(item.id),\n          quantity: 1,\n          checked: false,\n          firstImage: item.images?.length ? item.images[0] : null,\n          stockStatus: '有余货'\n        }));\n      } catch (e) {\n        console.error('拉取购物车失败', e);\n      }\n    }\n  },\n  mounted() {\n    this.loadCartItems();\n  }\n};","map":{"version":3,"names":["JSONbig","name","data","cartItems","deliveryAddress","isAllChecked","computed","cartCount","reduce","total","item","quantity","totalPrice","checked","price","methods","goBackHome","$router","push","decreaseQty","index","increaseQty","handleQtyChange","qty","handleCheckAll","every","checkAll","forEach","deleteSelected","filter","handleCheckout","selectedItems","length","$message","warning","path","query","items","JSON","stringify","loadCartItems","res","fetch","text","list","parse","map","id","String","firstImage","images","stockStatus","e","console","error","mounted"],"sources":["D:\\Desktop\\ecomplat\\src\\views\\Cart.vue"],"sourcesContent":["<template>\r\n    <div class=\"cart-page\">\r\n      <!-- 返回首页按钮 -->\r\n      <div class=\"back-home\">\r\n        <button @click=\"goBackHome\">返回首页</button>\r\n      </div>\r\n  \r\n      <!-- 购物车主体内容 -->\r\n      <div class=\"cart-container\">\r\n        <h2 class=\"cart-title\">我的购物车</h2>\r\n        <!-- 配送地址展示 -->\r\n        <div class=\"delivery-info\">\r\n          <label>配送地址：</label>\r\n          <span>{{ deliveryAddress }}</span>\r\n        </div>\r\n  \r\n        <!-- 购物车商品列表 -->\r\n        <table class=\"cart-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>选择</th>\r\n              <th>商品信息</th>\r\n              <th>单价</th>\r\n              <th>数量</th>\r\n              <th>状态</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              v-for=\"(item, index) in cartItems\"\r\n              :key=\"item.id\"\r\n            >\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  v-model=\"item.checked\"\r\n                  @change=\"handleCheckAll\"\r\n                >\r\n              </td>\r\n              <td class=\"product-info\">\r\n                <img :src=\"item.firstImage\" alt=\"商品图\" class=\"product-img\">\r\n                <div class=\"product-desc\">\r\n                  <p>{{ item.name }}</p>\r\n                  <p>{{ item.desc }}</p>\r\n                </div>\r\n              </td>\r\n              <td>{{ item.price }} ¥</td>\r\n              <td class=\"quantity-control\">\r\n                <button @click=\"decreaseQty(index)\">-</button>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"item.quantity\"\r\n                  min=\"1\"\r\n                  @change=\"handleQtyChange(index)\"\r\n                >\r\n                <button @click=\"increaseQty(index)\">+</button>\r\n              </td>\r\n              <td>{{ item.stockStatus }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n  \r\n        <!-- 操作栏：全选、删除、总价、结算 -->\r\n        <div class=\"cart-actions\">\r\n          <div class=\"select-all\">\r\n            <input\r\n              type=\"checkbox\"\r\n              v-model=\"isAllChecked\"\r\n              @change=\"checkAll\"\r\n            >\r\n            <label>全选</label>\r\n            <button @click=\"deleteSelected\">删除</button>\r\n          </div>\r\n          <div class=\"total-price\">\r\n            总价：{{ totalPrice }} ¥\r\n          </div>\r\n          <button class=\"checkout-btn\" @click=\"handleCheckout\">结算</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import JSONbig from 'json-bigint'\r\n  export default {\r\n    name: 'CartPage',\r\n    data() {\r\n      return {\r\n        cartItems: [], // 购物车数据\r\n        deliveryAddress: '辽宁省大连市榆林区大连理工大学', // 配送地址\r\n        isAllChecked: false // 全选标识\r\n      }\r\n    },\r\n    computed: {\r\n      // 购物车商品数量（可用于导航栏徽标，若需要可暴露给父组件）\r\n      cartCount() {\r\n        return this.cartItems.reduce((total, item) => total + item.quantity, 0)\r\n      },\r\n      // 计算总价（已选商品）\r\n      totalPrice() {\r\n        return this.cartItems.reduce((total, item) => {\r\n          if (item.checked) {\r\n            return total + item.price * item.quantity\r\n          }\r\n          return total\r\n        }, 0)\r\n      }\r\n    },\r\n    methods: {\r\n      // 返回首页\r\n      goBackHome() {\r\n        this.$router.push('/') // 跳转到首页路由，根据实际路由调整\r\n      },\r\n      // 减少数量\r\n      decreaseQty(index) {\r\n        if (this.cartItems[index].quantity > 1) {\r\n          this.cartItems[index].quantity--\r\n        }\r\n      },\r\n      // 增加数量\r\n      increaseQty(index) {\r\n        this.cartItems[index].quantity++\r\n      },\r\n      // 数量改变时（可做合法性校验、同步接口等）\r\n      handleQtyChange(index) {\r\n        const qty = this.cartItems[index].quantity\r\n        if (qty < 1) {\r\n          this.cartItems[index].quantity = 1\r\n        }\r\n        // 这里可调用接口同步购物车数量：\r\n        // this.updateCartItemQty(this.cartItems[index].id, qty)\r\n      },\r\n      // 单个商品选中\r\n      handleCheckAll() {\r\n        this.isAllChecked = this.cartItems.every(item => item.checked)\r\n      },\r\n      // 全选/全不选\r\n      checkAll() {\r\n        this.cartItems.forEach(item => {\r\n          item.checked = this.isAllChecked\r\n        })\r\n      },\r\n      // 删除选中商品\r\n      deleteSelected() {\r\n        this.cartItems = this.cartItems.filter(item => !item.checked)\r\n        // 同时调用接口删除购物车数据：\r\n        // const ids = this.cartItems.filter(item => item.checked).map(item => item.id)\r\n        // this.deleteCartItems(ids)\r\n      },\r\n      // 结算（可跳转到结算页，或调用提交订单接口）\r\n      handleCheckout() {\r\n        const selectedItems = this.cartItems.filter(item => item.checked)\r\n        if (selectedItems.length === 0) {\r\n          this.$message.warning('请选择要结算的商品~')\r\n          return\r\n        }\r\n        // 这里可跳转结算页，传递选中商品信息：\r\n        this.$router.push({\r\n          path: '/checkout',\r\n          query: { items: JSON.stringify(selectedItems) }\r\n        })\r\n        // 或直接调用提交订单接口：\r\n        // this.submitOrder(selectedItems)\r\n      },\r\n      // 模拟从接口拉取购物车数据（实际项目替换为真实接口）\r\n      async loadCartItems() {\r\n        try {\r\n          const res = await fetch('http://localhost:8081/api/cart'); \r\n          const text = await res.text(); \r\n          const list = JSONbig.parse(text); \r\n          this.cartItems = list.map(item => ({\r\n            ...item,\r\n            id: String(item.id), \r\n            quantity: 1, \r\n            checked: false, \r\n            firstImage: item.images?.length ? item.images[0] : null, \r\n            stockStatus: '有余货' \r\n          }))\r\n        } catch (e) {\r\n          console.error('拉取购物车失败', e);\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.loadCartItems() \r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .cart-page {\r\n    font-family: 'Arial', sans-serif;\r\n    padding: 1rem;\r\n  }\r\n  \r\n  /* 返回首页按钮样式 */\r\n  .back-home {\r\n    margin-bottom: 1rem;\r\n  }\r\n  .back-home button {\r\n    padding: 0.5rem 1rem;\r\n    background-color: #1890ff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  .back-home button:hover {\r\n    background-color: #40a9ff;\r\n  }\r\n  \r\n  /* 购物车主体样式 */\r\n  .cart-title {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .delivery-info {\r\n    margin-bottom: 1rem;\r\n    font-size: 1rem;\r\n  }\r\n  .cart-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .cart-table th,\r\n  .cart-table td {\r\n    border: 1px solid #ddd;\r\n    padding: 0.8rem;\r\n    text-align: center;\r\n  }\r\n  .product-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n  .product-img {\r\n    width: 60px;\r\n    height: 60px;\r\n    object-fit: cover;\r\n  }\r\n  .product-desc {\r\n    text-align: left;\r\n  }\r\n  .quantity-control {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 0.5rem;\r\n  }\r\n  .quantity-control input {\r\n    width: 60px;\r\n    text-align: center;\r\n  }\r\n  .cart-actions {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1rem 0;\r\n  }\r\n  .select-all {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  .total-price {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n  }\r\n  .checkout-btn {\r\n    padding: 0.6rem 1.5rem;\r\n    background-color: #ff4d4f;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n  }\r\n  .checkout-btn:hover {\r\n    background-color: #ff7875;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .product-info {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n    .cart-actions {\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}