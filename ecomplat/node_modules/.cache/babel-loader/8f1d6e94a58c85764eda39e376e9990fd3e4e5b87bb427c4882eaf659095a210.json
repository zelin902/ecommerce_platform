{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'ProductDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const product = ref({});\n    const cartCount = ref(0);\n    const reviews = ref([{\n      user: '用户A',\n      comment: '口感醇厚，余味悠长。'\n    }]);\n    const services = ref(['包邮', '名酒鉴真', '品质溯源', '免费上门退换']);\n\n    // 商品主图\n    const firstImage = computed(() => Array.isArray(product.value.images) && product.value.images.length ? product.value.images[0] : '');\n    const count = ref(1);\n    const addCart = async () => {\n      try {\n        const userId = localStorage.getItem('userId');\n        if (!userId) {\n          alert('请先登录');\n          return;\n        }\n        if (!product.value.id) {\n          alert('商品信息加载失败');\n          return;\n        }\n\n        // 调用后端添加接口\n        const response = await fetch(`/api/cart/add`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: new URLSearchParams({\n            userId: userId,\n            productId: product.value.id,\n            quantity: count.value.toString()\n          })\n        });\n        if (response.ok) {\n          // 成功：提示并更新购物车数量\n          alert('加入购物车成功！');\n          count.value = 1; // 重置数量选择器\n          fetchCartCount(); // 刷新导航栏数量\n        } else {\n          const error = await response.text();\n          alert('加入失败：' + error);\n        }\n      } catch (error) {\n        console.error('添加失败：', error);\n        alert('网络异常，请重试');\n      }\n    };\n    // 拉取商品详情（含 specs）\n    onMounted(async () => {\n      try {\n        const id = String(route.params.id);\n        const res = await fetch(`http://localhost:8081/api/product/${id}`);\n        const text = await res.text();\n        if (!text) throw new Error('空响应');\n        product.value = JSON.parse(text);\n      } catch (e) {\n        console.error('获取商品失败', e);\n      }\n    });\n    const __returned__ = {\n      route,\n      product,\n      cartCount,\n      reviews,\n      services,\n      firstImage,\n      count,\n      addCart,\n      ref,\n      computed,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRoute","route","product","cartCount","reviews","user","comment","services","firstImage","Array","isArray","value","images","length","count","addCart","userId","localStorage","getItem","alert","id","response","fetch","method","headers","body","URLSearchParams","productId","quantity","toString","ok","fetchCartCount","error","text","console","String","params","res","Error","JSON","parse","e"],"sources":["D:/Desktop/ecomplat/src/views/ProductDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"product-detail\">\r\n      <!-- 顶部返回 -->\r\n      <header class=\"detail-header\">\r\n        <span @click=\"$router.back()\" class=\"back-btn\">← 返回首页</span>\r\n      </header>\r\n  \r\n    <section class=\"price-info\">\r\n    <!-- 左侧小图 -->\r\n        <div class=\"left-thumb\">\r\n            <img :src=\"firstImage\" alt=\"商品主图\" />\r\n        </div>\r\n\r\n        <!-- 右侧信息 -->\r\n        <div class=\"right-info\">\r\n            <h1 class=\"product-title\">{{ product.name }}</h1>\r\n            <p class=\"price\">¥{{ product.price }}</p>\r\n\r\n            <ul class=\"services\">\r\n                <li v-for=\"s in services\" :key=\"s\">{{ s }}</li>\r\n            </ul>\r\n\r\n            <p class=\"stock\">余货量：{{ product.stock }}+</p>\r\n            <el-tag type=\"primary\" size=\"small\">{{ product.category }}</el-tag>\r\n              <!-- 新增：数量选择器 + 加入购物车 -->\r\n            <div class=\"cart-bar\">\r\n                <div class=\"counter\">\r\n                <button @click=\"count > 1 ? count-- : 1\">-</button>\r\n                <span>{{ count }}</span>\r\n                <button @click=\"count++\">+</button>\r\n                </div>\r\n                <button class=\"add-cart-btn\" @click=\"addCart\">加入购物车</button>\r\n            </div>\r\n\r\n        </div>\r\n    </section>\r\n  \r\n      <!-- 商品描述 -->\r\n      <section class=\"description\">\r\n        <h2>商品描述</h2>\r\n        <p>{{ product.description }}</p>\r\n      </section>\r\n  \r\n      <!-- 动态规格 -->\r\n      <section class=\"specs\">\r\n        <h2>商品详情</h2>\r\n        <table>\r\n          <tbody>\r\n            <tr v-for=\"(value, key) in product.specs\" :key=\"key\">\r\n              <td>{{ key }}</td>\r\n              <td>{{ value }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n  \r\n      <!-- 客户评价（示例） -->\r\n      <section class=\"reviews\">\r\n        <h2>客户评价</h2>\r\n        <div class=\"review-card\" v-for=\"r in reviews\" :key=\"r.user\">\r\n          <strong>{{ r.user }}</strong>\r\n          <p>{{ r.comment }}</p>\r\n        </div>\r\n      </section>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, computed, onMounted } from 'vue'\r\n  import { useRoute } from 'vue-router'\r\n  \r\n  const route = useRoute()\r\n  const product = ref({})\r\n  const cartCount = ref(0);\r\n  const reviews = ref([\r\n    { user: '用户A', comment: '口感醇厚，余味悠长。' }\r\n  ])\r\n  const services = ref(['包邮', '名酒鉴真', '品质溯源', '免费上门退换'])\r\n  \r\n  // 商品主图\r\n  const firstImage = computed(() =>\r\n    Array.isArray(product.value.images) && product.value.images.length\r\n      ? product.value.images[0]\r\n      : ''\r\n  )\r\n  const count = ref(1)\r\n\r\n  const addCart = async () => {\r\n  try {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!userId) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    if (!product.value.id) {\r\n      alert('商品信息加载失败');\r\n      return;\r\n    }\r\n\r\n    // 调用后端添加接口\r\n    const response = await fetch(`/api/cart/add`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: new URLSearchParams({\r\n        userId: userId,\r\n        productId: product.value.id,\r\n        quantity: count.value.toString()\r\n      })\r\n    });\r\n\r\n    if (response.ok) {\r\n      // 成功：提示并更新购物车数量\r\n      alert('加入购物车成功！');\r\n      count.value = 1; // 重置数量选择器\r\n      fetchCartCount(); // 刷新导航栏数量\r\n    } else {\r\n      const error = await response.text();\r\n      alert('加入失败：' + error);\r\n    }\r\n  } catch (error) {\r\n    console.error('添加失败：', error);\r\n    alert('网络异常，请重试');\r\n  }\r\n};\r\n  // 拉取商品详情（含 specs）\r\n  onMounted(async () => {\r\n    try {\r\n        const id = String(route.params.id)\r\n      const res = await fetch(`http://localhost:8081/api/product/${id}`)\r\n      const text = await res.text()\r\n      if (!text) throw new Error('空响应')\r\n      product.value = JSON.parse(text)\r\n    } catch (e) {\r\n      console.error('获取商品失败', e)\r\n    }\r\n  })\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .detail-header { padding: 12px; background: #fff; }\r\n  .back-btn { cursor: pointer; font-size: 16px; color: #1890ff; }\r\n  .price-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  padding: 12px;\r\n  background: #fff;\r\n}\r\n.left-thumb img {\r\n  width: 500px;\r\n  height: 500px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n  max-width: 100%;   /* 小屏时自适应 */\r\n}\r\n.right-info {\r\n  flex: 1;\r\n}\r\n  .price { font-size: 24px; color: #f56c6c; margin: 8px 0; }\r\n/* 服务标签水平排布 */\r\n.services {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 8px 0;\r\n}\r\n.services li {\r\n  background: #f1f1f1;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\n/* 其余内容保持居中 */\r\n.description,\r\n.specs,\r\n.reviews {\r\n\r\n  /* ✅ 保留原来的 padding、背景、间距即可 */\r\n  padding: 12px;\r\n  margin-top: 12px;\r\n  background: #fff;\r\n}\r\n  .specs table { width: 100%; border-collapse: collapse; }\r\n  .specs td { padding: 6px 0; border-bottom: 1px solid #eee; }\r\n  .detail-footer { position: fixed; bottom: 0; width: 100%; background: #fff; padding: 12px; box-shadow: 0 -2px 6px rgba(0,0,0,.1); }\r\n  .cart-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  margin: 12px 0;\r\n}\r\n\r\n.counter {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-size: 14px;\r\n}\r\n.counter button {\r\n  width: 24px;\r\n  height: 24px;\r\n  border: 1px solid #dcdcdc;\r\n  background: #fff;\r\n  cursor: pointer;\r\n  border-radius: 2px;\r\n}\r\n.counter span {\r\n  min-width: 24px;\r\n  text-align: center;\r\n}\r\n\r\n.add-cart-btn {\r\n  background: #ff5000;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}